require('./bootstrap');


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This makes the filter   fromNow()   which is held in   ReviewList.vue   component Global
//
import moment from "moment";
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Needed to allow access for the vue components to access routes
//
import VueRouter from "vue-router";
import Vuex from "vuex";
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Registering index.vue locally
//
import Index from "./Index";
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Needed to allow access for the vue components to access routes
//
import router from "./routes";
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import FatalError from "./shared/components/FatalError";
import StarRating from "./shared/components/StarRating";
import Success from "./shared/components/Success";
import ValidationErrors from "./shared/components/ValidationErrors";
import PriceBreakdown from "./bookable/PriceBreakdown";
import storeDefinition from "./store";
import Axios from "axios";

window.Vue = require('vue');


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Added in an attempt to get axios to pick up routes on development server
//
//  *** WARNING ***  This causes this error in Login at this stage
//
//  Access to XMLHttpRequest at 'http://localhost:8000/sanctions/csrf-cookie' 
//  from origin 'http://127.0.0.1:8000' has been blocked by CORS policy: Response 
//  to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.
//
window.axios = require('axios');
window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
window.axios.defaults.withCredentials = true;
//window.axios.defaults.baseURL = 'http://leedavidsoncontentmanagementsystem1.com/CodeLaravel7/public';
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Global registration of these components no longer required
//  because they are now imported in the routes.js however left for reference
//
//  Vue.component('example-component', require('./components/ExampleComponent.vue').default);
//  Vue.component('example-component-2', require('./components/ExampleComponent2.vue').default);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This allows special access in every component of our vue.js
//  application to special object the router and route prepended with a $
//
Vue.use(VueRouter);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Vue.use(Vuex);


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This makes the filter   fromNow()   which is held in   ReviewList.vue   component Global
//
Vue.filter("fromNow", value => moment(value).fromNow());
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This Globally registers StarRating component
//
Vue.component("star-rating", StarRating);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This Globally registers FatalError component
//
Vue.component("fatal-error", FatalError);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This Globally registers Success component
//
Vue.component("success", Success);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This Globally registers ValidationErrors component
//
Vue.component("v-errors", ValidationErrors);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  This Globally registers PriceBreakdown component
//
Vue.component("price-breakdown", PriceBreakdown);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Create Vuex store
//
const store = new Vuex.Store(storeDefinition);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  AXIOS RESPONSE INTERCEPTER TO HANDLE 401 ERRORS ON LOGIN GLOBALLY
//
window.axios.interceptors.response.use(
    response => {
        return response;
    },
    error => {
        if (401 === error.response.status) {
            store.dispatch("logout");
        }

        return Promise.reject(error);
    }
);
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


const app = new Vue({
    el: '#app',

    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //  ES6 horthand for     routes: routes,
    //
    router, 
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //  ES6 shorthand for     store: store,
    //
    store, 
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //  Here we tell Vue it should know about the component Index.vue
    //
    components: {
        "index": Index
    },
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //  This is using the local storage to keep the last search in the   From   and   To   boxes 
    //  so that the user doesnt have to keep re-typing the date that they already entered for each 
    //  successive search and can do this because the   Availability.vue   component has access to
    //  $store   and so since   const app = new Vue({ });   is also a vue component it can access it
    //  here too
    //
    async beforeCreate() {
        this.$store.dispatch("loadStoredState");    //  This is reading the state from the local storage using the action   loadStoredState(context) { }   in   store.js   
        this.$store.dispatch("loadUser");           //  Use the store.js loadUser() method to check that user is autheticated and if so refresh user data in local storage each time the application is refreshed

        //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //  COMMENTED OUT AS THIS WAS JUST FOR DEMONSTRATION AND
        //  WE DONT WANT TO AUTHETICATE EVERY TIME WE REFRESH A PAGE
        //
        //  This is how to check authentication in the inspector in the Chrome tools
        //  using the Network tab set to XHR and if you use xxx and xxx as the details
        //  the login word will stay in the inspector allowing you to click it and view
        //  the error of invalid date but if you add a real email and password from the 
        //  database its only visible for a second befor eit disappears as the real login 
        //  details go through
        //
        //  await axios.get('/sanctions/csrf-cookie');
        //  await axios.post("/login", {
        //      email: 'xxx',
        //      password: 'xxx'
        //  );

        //  This lets you see the logged in user details using the above procedure with the inspector      
        //
        //  await axios.get('/user');
        //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    },
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

});
